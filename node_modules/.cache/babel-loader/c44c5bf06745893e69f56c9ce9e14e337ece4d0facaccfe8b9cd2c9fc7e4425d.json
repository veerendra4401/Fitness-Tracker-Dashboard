{"ast":null,"code":"var _jsxFileName = \"E:\\\\tracker\\\\tracker\\\\src\\\\components\\\\stats\\\\WorkoutChart.tsx\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst WorkoutChart = ({\n  workouts\n}) => {\n  const last7Days = Array.from({\n    length: 7\n  }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    return date.toISOString().split('T')[0];\n  }).reverse();\n  const caloriesByDay = last7Days.map(date => {\n    return workouts.filter(w => w.date.startsWith(date)).reduce((sum, w) => sum + w.caloriesBurned, 0);\n  });\n  const data = {\n    labels: last7Days.map(date => new Date(date).toLocaleDateString()),\n    datasets: [{\n      label: 'Calories Burned',\n      data: caloriesByDay,\n      backgroundColor: '#4F46E5'\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Calories Burned Last 7 Days'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkoutChart;\nexport default WorkoutChart;\nvar _c;\n$RefreshReg$(_c, \"WorkoutChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","WorkoutChart","workouts","last7Days","Array","from","length","_","i","date","Date","setDate","getDate","toISOString","split","reverse","caloriesByDay","map","filter","w","startsWith","reduce","sum","caloriesBurned","data","labels","toLocaleDateString","datasets","label","backgroundColor","options","responsive","plugins","legend","position","title","display","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tracker/tracker/src/components/stats/WorkoutChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Workout } from '../../types';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface Props {\r\n  workouts: Workout[];\r\n}\r\n\r\nconst WorkoutChart: React.FC<Props> = ({ workouts }) => {\r\n  const last7Days = Array.from({ length: 7 }, (_, i) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() - i);\r\n    return date.toISOString().split('T')[0];\r\n  }).reverse();\r\n\r\n  const caloriesByDay = last7Days.map(date => {\r\n    return workouts\r\n      .filter(w => w.date.startsWith(date))\r\n      .reduce((sum, w) => sum + w.caloriesBurned, 0);\r\n  });\r\n\r\n  const data = {\r\n    labels: last7Days.map(date => new Date(date).toLocaleDateString()),\r\n    datasets: [\r\n      {\r\n        label: 'Calories Burned',\r\n        data: caloriesByDay,\r\n        backgroundColor: '#4F46E5',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Calories Burned Last 7 Days',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <Bar options={options} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkoutChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtCT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAMD,MAAMK,YAA6B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACtD,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;IACpD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,GAAGJ,CAAC,CAAC;IAChC,OAAOC,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAEZ,MAAMC,aAAa,GAAGb,SAAS,CAACc,GAAG,CAACR,IAAI,IAAI;IAC1C,OAAOP,QAAQ,CACZgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACV,IAAI,CAACW,UAAU,CAACX,IAAI,CAAC,CAAC,CACpCY,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,cAAc,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAEtB,SAAS,CAACc,GAAG,CAACR,IAAI,IAAI,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACiB,kBAAkB,CAAC,CAAC,CAAC;IAClEC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBJ,IAAI,EAAER,aAAa;MACnBa,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACEtC,OAAA;IAAKuC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBxC,OAAA,CAACF,GAAG;MAACiC,OAAO,EAAEA,OAAQ;MAACN,IAAI,EAAEA;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1CI3C,YAA6B;AA4CnC,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}